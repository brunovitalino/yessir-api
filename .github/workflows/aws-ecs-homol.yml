name: CI/CD Pipeline Homologacao

on:
  workflow_dispatch:
  release:
    types: [published]

env:
  AWS_REGION: us-east-1
  ECS_CLUSTER: yessir-cluster
  ECS_SERVICE: yessir-api-service
  CONTAINER_NAME: yessir-api
  SONAR_PROJECT_NAME: YesSir_API
  SONAR_PROJECT_VERSION: ${{ github.ref_name }}  # Exemplo: v1.0.0

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: YesSir Environment

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # CI
      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Install SonarQube Scanner
        run: |
          curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-7.0.2.4839-linux-x64.zip
          unzip sonar-scanner.zip
          echo "SONNAR_SCANNER=$PWD/sonar-scanner-7.0.2.4839-linux-x64/bin" >> $GITHUB_ENV

      - name: Run SonarQube Scanner
        run: |
          export PATH=${{ env.SONNAR_SCANNER }}:$PATH
          sonar-scanner \
            -Dsonar.java.source=21 \
            -Dsonar.java.target=21 \
            -Dsonar.sources=src/main/java \
            -Dsonar.tests=src/test/java \
            -Dsonar.java.binaries=target/classes \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.token=${{ secrets.SONARQUBE_TOKEN }} \
            -Dsonar.organization=bv-labs \
            -Dsonar.projectName=${{ env.SONAR_PROJECT_NAME }} \
            -Dsonar.projectKey=${{ env.CONTAINER_NAME }} \
            -Dsonar.projectVersion=${{ env.SONAR_PROJECT_VERSION }}

      # CD
      - name: Login to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build -t brunovitalino/yessir-api-image:latest .
          docker push brunovitalino/yessir-api-image:${{ env.VERSION }}
          docker push brunovitalino/yessir-api-image:latest

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Update ECS Service
        run: |
          aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --force-new-deployment
