name: CI/CD Pipeline Homologacao

on:
  workflow_dispatch:
  pull_request:
    types: [closed]
    branches:
      - 'release/*'

env:
  AWS_REGION: us-east-1
  ECS_CLUSTER: yessir-cluster
  ECS_SERVICE: yessir-api-service
  CONTAINER_NAME: yessir-api
  is_manual: ${{ github.event_name == 'workflow_dispatch' && 'true' || 'false' }}

jobs:
  build-and-deploy:
    if: ${{ github.event_name == 'workflow_dispatch' || (github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main' && github.event.pull_request.head.ref == 'release/*') }}
    runs-on: ubuntu-latest
    environment: YesSir Environment      

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Determine if manual or PR merge
        id: manual-or-pr
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "Running pipeline manually"
          else
            echo "Running pipeline on PR merge"
          fi

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Login to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build -t brunovitalino/yessir-api-image:latest .
          docker push brunovitalino/yessir-api-image:latest

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Update ECS Service
        run: |
          aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --force-new-deployment
